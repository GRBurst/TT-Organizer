
buildDir = "/tmp"

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:1.2.3"
        classpath "jp.leafytree.gradle:gradle-android-scala-plugin:1.4"
    }
}

repositories {
    jcenter()
}

apply plugin: "com.android.application"
apply plugin: "jp.leafytree.android-scala"

android {
    // Can be built with API Level 16 or higher, while this app retains runtime compatibility from API Level 10. Please refer to targetSdkVersion property
    compileSdkVersion "android-16"
    buildToolsVersion "24.0.2"

    packagingOptions {
         exclude 'META-INF/LICENSE.txt'
         exclude 'META-INF/NOTICE.txt'
         exclude 'META-INF/LICENSE'
         exclude 'META-INF/NOTICE'
         exclude 'rootdoc.txt'
     }

    defaultConfig {
        applicationId "com.grburst.ttrorganizer"
        minSdkVersion 14
        targetSdkVersion 16
        versionCode 1
        versionName "1.0"
    }

    signingConfigs {
        release {
            File propsFile = file("signing.properties");
            Properties props = new Properties();
            if (propsFile.exists() && propsFile.canRead())
                props.load(new FileInputStream(propsFile))

            if(props.containsKey('STORE_FILE'))
                android.signingConfigs.release.storeFile = file(props['STORE_FILE'])

            if(props.containsKey('KEY_ALIAS'))
                android.signingConfigs.release.keyAlias = props['KEY_ALIAS']

            storePassword " "
            keyPassword " "
        }
    }

    buildTypes {
        debug {
            minifyEnabled true
            proguardFile file("proguard-rules.txt")
        }

        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFile file("proguard-rules.txt")
        }
    }
}

dependencies {
    compile "org.scala-lang:scala-library:2.11.8"
    compile "org.scaloid:scaloid_2.11:4.0"
    compile "net.ruippeixotog:scala-scraper_2.11:1.0.0"
    compile "org.macroid:macroid_2.11:2.0.0-M4"
    compile "org.macroid:macroid-viewable_2.11:2.0.0-M4"
    compile "com.fortysevendeg:macroid-extras_2.11:0.3"
}

task getConfigs << {
    final Console console = System.console();
    if (console != null) {

        println 'Parsing singing config'
        File propsFile = file("signing.properties");
        Properties props = new Properties();
        if (propsFile.exists() && propsFile.canRead())
            props.load(new FileInputStream(propsFile))

        if(props.containsKey('STORE_FILE'))
            android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        else
            android.signingConfigs.release.storeFile = new String(console.readLine("\nEnter keystore path: "))

        if(props.containsKey('STORE_PASSWORD'))
            android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        else
            android.signingConfigs.release.storePassword = new String(console.readPassword("\nEnter keystore password: "))

        if(props.containsKey('KEY_ALIAS'))
            android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        else
            android.signingConfigs.release.keyAlias = new String(console.readLine("\nEnter keyalias path: "))

        if(props.containsKey('KEY_PASSWORD'))
            android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
        else
            android.signingConfigs.release.keyPassword = new String(console.readPassword("\nEnter keyalias password: "))

    }
}

tasks.whenTaskAdded { theTask ->
    if (theTask.name.equals("packageRelease")) {
        theTask.dependsOn "getConfigs"
    }
}
